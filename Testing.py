# Written by William Dinauer
# CS74 Fall 2022

from ConstraintSatisfactionProblem.ConstraintSatisfactionProblem import ConstraintSatisfactionProblem
from ConstraintSatisfactionProblem.MapProblem import MapProblem

# Testing for Large Graph
large_graph = {0: {40, 46, 120, 134, 146, 180, 203},
 1: {38, 60, 86, 95, 138, 187, 250},
 2: {5, 27, 44, 83, 103, 111, 157, 216, 242, 249, 273},
 3: {22, 35, 41, 93, 122, 140, 162, 189, 225, 236, 254},
 4: {29, 73, 74, 127, 149},
 5: {2, 8, 12, 57, 83, 103, 160, 161, 273},
 6: {24, 26, 54, 66, 81, 113, 185, 191},
 7: {14, 36, 89, 92, 99, 119, 121, 126, 202, 220},
 8: {5, 27, 39, 43, 57, 75, 103, 160, 244, 255},
 9: {19,
  29,
  33,
  34,
  68,
  80,
  98,
  123,
  127,
  154,
  193,
  199,
  219,
  222,
  252,
  257,
  259},
 10: {20, 23, 38, 59, 95, 133, 141, 145, 270},
 11: {51, 70, 91, 132, 155, 181},
 12: {5, 33, 57, 79, 83, 143, 150, 161, 265},
 13: {19, 30, 80, 92, 99, 105, 118, 148, 171, 196, 268},
 14: {7, 62, 74, 77, 89, 112, 121, 178, 202, 206, 239},
 15: {32, 52, 69, 85, 86, 94, 152, 163, 170, 210},
 16: {29, 57, 73, 75, 84, 98, 108, 159, 231},
 17: {50, 52, 106, 114, 120, 138, 165, 173, 215, 223, 266},
 18: {46, 58, 60, 67, 175, 187, 200, 234, 274},
 19: {9, 13, 34, 49, 80, 94, 123, 167, 171, 196, 219, 264, 267},
 20: {10, 86, 95, 97, 128, 141, 152, 176},
 21: {28, 41, 82, 85, 97, 133, 141, 158, 253, 275},
 22: {3, 35, 45, 140, 162, 166, 172},
 23: {10, 35, 38, 41, 59, 76, 115, 133, 189, 214, 224, 241, 270},
 24: {6, 26, 42, 54, 106, 120, 131, 137, 164, 185, 194},
 25: {49, 69, 129, 143, 150, 170, 227, 243},
 26: {6, 24, 52, 55, 102, 137, 237},
 27: {2, 8, 39, 103, 124, 216, 244, 256},
 28: {21, 31, 41, 71, 101, 122, 147, 158, 212, 228, 235},
 29: {4, 9, 16, 73, 98, 108, 127, 154, 199, 252},
 30: {13, 36, 74, 80, 99, 118, 127, 148, 149, 217, 239},
 31: {28, 71, 93, 122, 136, 139, 179, 190, 195, 272},
 32: {15, 52, 86, 138, 163, 215, 250, 266},
 33: {9, 12, 57, 79, 123, 150, 188, 193, 209, 222, 257, 265, 267},
 34: {9, 19},
 35: {3, 22, 23, 45, 76, 140, 189, 198, 214, 236, 241, 278},
 36: {7, 30, 99, 121, 126, 239},
 37: {47, 61, 65, 72, 88, 125, 248},
 38: {1, 10, 23, 58, 59, 76, 95, 115, 187, 204},
 39: {8, 27, 43, 84, 124, 135, 144, 192, 256},
 40: {0, 46, 110, 142, 200, 203},
 41: {3, 21, 23, 28, 122, 133, 189, 197, 212, 225, 235, 275},
 42: {24, 117, 120, 131, 153, 164, 180},
 43: {8, 39, 75, 84, 192, 255, 258, 269},
 44: {2, 69, 70, 83, 87, 111, 129, 156, 169, 201, 249},
 45: {22, 35, 64, 76, 116, 151, 166, 198, 232},
 46: {0, 18, 40, 50, 67, 146, 200},
 47: {37, 61, 65, 238},
 48: {53, 63, 64, 76, 78, 96, 107, 109, 182, 183, 230, 260},
 49: {19, 25, 94, 150, 210, 243, 267},
 50: {17, 46, 60, 67, 120, 134, 138, 146, 165, 223},
 51: {11, 55, 66, 100, 132, 181},
 52: {15, 17, 26, 32, 69, 102, 106, 137, 163, 173, 177, 221, 266},
 53: {48, 63, 90, 96},
 54: {6, 24, 113, 117, 164, 185, 211},
 55: {26, 51, 66, 87, 100, 132, 213, 237},
 56: {72, 88, 136, 139, 207, 261, 263},
 57: {5, 8, 12, 16, 33, 75, 98, 160, 222, 259},
 58: {18, 38, 78, 183, 200, 204, 234, 271},
 59: {10, 23, 38},
 60: {1, 18, 50, 67, 138, 187, 274},
 61: {37, 47, 88, 89, 112, 125, 238, 251},
 62: {14},
 63: {48, 53, 64, 90, 116, 260},
 64: {45, 48, 63, 76, 116, 230, 232, 260},
 65: {37, 47, 72},
 66: {6, 51, 55, 100},
 67: {18, 46, 50, 60, 175},
 68: {9},
 69: {15, 25, 44, 52, 87, 129, 156, 170, 177, 227},
 70: {11, 44, 87, 91, 111, 132, 155},
 71: {28, 31, 89, 101, 130, 139, 147, 208},
 72: {37, 56, 65, 88},
 73: {4, 16, 29, 108, 159},
 74: {4, 14, 30, 77, 149, 239, 277},
 75: {8, 16, 43, 57, 84, 231, 269},
 76: {23, 35, 38, 45, 48, 64, 115, 182, 183, 198, 224, 230, 232, 233, 241},
 77: {14, 74},
 78: {48, 58, 107, 109, 110, 183, 184, 200, 271},
 79: {12, 33},
 80: {9, 13, 19, 30, 127, 171, 268},
 81: {6},
 82: {21, 85, 92, 101, 105, 158, 218, 247, 276},
 83: {2, 5, 12, 44, 143, 169, 201, 249},
 84: {16, 39, 43, 75, 104, 144, 159, 174, 186, 192, 258, 269},
 85: {15, 21, 82, 94, 97, 105, 128, 152, 167, 196, 226, 264},
 86: {1, 15, 20, 32, 95, 152, 250},
 87: {44, 55, 69, 70, 102, 132, 156, 168, 177, 213, 229, 262},
 88: {37, 56, 61, 72, 125, 139, 208, 248},
 89: {7, 14, 61, 71, 92, 101, 112, 130, 178, 202, 205, 208},
 90: {53, 63},
 91: {11, 70},
 92: {7, 13, 82, 89, 99, 101, 105, 119, 205, 218, 276},
 93: {3, 31, 122, 162, 179, 190, 246},
 94: {15, 19, 49, 85, 264},
 95: {1, 10, 20, 38, 86},
 96: {48, 53, 109},
 97: {20, 21, 85, 128, 226},
 98: {9, 16, 29, 57, 259},
 99: {7, 13, 30, 36, 92, 118, 119},
 100: {51, 55, 66},
 101: {28, 71, 82, 89, 92, 158, 228, 276},
 102: {26, 52, 87, 168, 177, 213, 221, 237},
 103: {2, 5, 8, 27, 244},
 104: {84, 144, 186},
 105: {13, 82, 85, 92, 196, 218},
 106: {17, 24, 52, 114, 120, 137, 173, 194},
 107: {48, 78},
 108: {16, 29, 73},
 109: {48, 78, 96, 110},
 110: {40, 78, 109, 142, 200},
 111: {2, 44, 70, 155},
 112: {14, 61, 89, 178, 206, 251},
 113: {6, 54, 211, 245},
 114: {17, 106},
 115: {23, 38, 76},
 116: {45, 63, 64, 151},
 117: {42, 54, 153, 164, 240},
 118: {13, 30, 99},
 119: {7, 92, 99},
 120: {0, 17, 24, 42, 50, 106, 134, 180, 194},
 121: {7, 14, 36, 220, 239},
 122: {3, 28, 31, 41, 93, 225, 254},
 123: {9, 19, 33},
 124: {27, 39},
 125: {37, 61, 88},
 126: {7, 36},
 127: {4, 9, 29, 30, 80, 149, 252},
 128: {20, 85, 97},
 129: {25, 44, 69, 143, 169, 227},
 130: {71, 89},
 131: {24, 42},
 132: {11, 51, 55, 70, 87, 229, 262},
 133: {10, 21, 23, 41, 141, 145, 197, 270, 275},
 134: {0, 50, 120},
 135: {39},
 136: {31, 56, 139, 207, 263, 272},
 137: {24, 26, 52, 106},
 138: {1, 17, 32, 50, 60, 215},
 139: {31, 56, 71, 88, 136},
 140: {3, 22, 35},
 141: {10, 20, 21, 133},
 142: {40, 110},
 143: {12, 25, 83, 129},
 144: {39, 84, 104},
 145: {10, 133},
 146: {0, 46, 50},
 147: {28, 71},
 148: {13, 30},
 149: {4, 30, 74, 127},
 150: {12, 25, 33, 49, 243, 267},
 151: {45, 116},
 152: {15, 20, 85, 86},
 153: {42, 117, 180},
 154: {9, 29},
 155: {11, 70, 111},
 156: {44, 69, 87},
 157: {2},
 158: {21, 28, 82, 101},
 159: {16, 73, 84, 174},
 160: {5, 8, 57},
 161: {5, 12},
 162: {3, 22, 93, 172, 246},
 163: {15, 32, 52},
 164: {24, 42, 54, 117},
 165: {17, 50},
 166: {22, 45},
 167: {19, 85},
 168: {87, 102},
 169: {44, 83, 129},
 170: {15, 25, 69, 210},
 171: {13, 19, 80},
 172: {22, 162},
 173: {17, 52, 106},
 174: {84, 159},
 175: {18, 67},
 176: {20},
 177: {52, 69, 87, 102},
 178: {14, 89, 112},
 179: {31, 93},
 180: {0, 42, 120, 153},
 181: {11, 51},
 182: {48, 76},
 183: {48, 58, 76, 78, 233},
 184: {78},
 185: {6, 24, 54},
 186: {84, 104},
 187: {1, 18, 38, 60},
 188: {33},
 189: {3, 23, 35, 41, 214, 236},
 190: {31, 93},
 191: {6},
 192: {39, 43, 84},
 193: {9, 33},
 194: {24, 106, 120},
 195: {31},
 196: {13, 19, 85, 105},
 197: {41, 133},
 198: {35, 45, 76},
 199: {9, 29},
 200: {18, 40, 46, 58, 78, 110},
 201: {44, 83},
 202: {7, 14, 89},
 203: {0, 40},
 204: {38, 58},
 205: {89, 92},
 206: {14, 112},
 207: {56, 136},
 208: {71, 88, 89},
 209: {33},
 210: {15, 49, 170},
 211: {54, 113},
 212: {28, 41},
 213: {55, 87, 102},
 214: {23, 35, 189},
 215: {17, 32, 138},
 216: {2, 27},
 217: {30},
 218: {82, 92, 105},
 219: {9, 19},
 220: {7, 121},
 221: {52, 102},
 222: {9, 33, 57},
 223: {17, 50},
 224: {23, 76},
 225: {3, 41, 122},
 226: {85, 97},
 227: {25, 69, 129},
 228: {28, 101},
 229: {87, 132},
 230: {48, 64, 76},
 231: {16, 75},
 232: {45, 64, 76},
 233: {76, 183},
 234: {18, 58},
 235: {28, 41},
 236: {3, 35, 189},
 237: {26, 55, 102},
 238: {47, 61},
 239: {14, 30, 36, 74, 121},
 240: {117},
 241: {23, 35, 76},
 242: {2},
 243: {25, 49, 150},
 244: {8, 27, 103},
 245: {113},
 246: {93, 162},
 247: {82},
 248: {37, 88},
 249: {2, 44, 83},
 250: {1, 32, 86},
 251: {61, 112},
 252: {9, 29, 127},
 253: {21},
 254: {3, 122},
 255: {8, 43},
 256: {27, 39},
 257: {9, 33},
 258: {43, 84},
 259: {9, 57, 98},
 260: {48, 63, 64},
 261: {56},
 262: {87, 132},
 263: {56, 136},
 264: {19, 85, 94},
 265: {12, 33},
 266: {17, 32, 52},
 267: {19, 33, 49, 150},
 268: {13, 80},
 269: {43, 75, 84},
 270: {10, 23, 133},
 271: {58, 78},
 272: {31, 136},
 273: {2, 5},
 274: {18, 60},
 275: {21, 41, 133},
 276: {82, 92, 101},
 277: {74},
 278: {35}}


map_values = [0, 1, 2, 3]
map_problem = MapProblem(large_graph, map_values)

# Change parameters here
csp = ConstraintSatisfactionProblem(map_problem, "Degree", True, True)

assignment = csp.backtracking_search()
print(assignment)
